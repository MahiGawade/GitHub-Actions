name: Python Apply v2
 
on:
  pull_request:
    types: [closed]

jobs:
  # Step 1: build the matrix dynamically
  build-matrix:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
 
    steps:
      - name: Determine environments with changes
        id: set-matrix
        run: |
          labels="${{ join(github.event.pull_request.labels.*.name, ' ') }}"
 
          # start with all possible envs
          MATRIX='["dev1","dev2"]'
 
          # filter out those with no-changes
          FILTERED=$(echo "$MATRIX" | jq -c \
            "[ .[] | select( (\"$labels\" | contains(\"aws_\" + . + \"/no-changes\")) | not ) ]")
 
          echo "Filtered matrix: $FILTERED"
          echo "matrix=$FILTERED" >> $GITHUB_OUTPUT
 
  # Step 2: run only on remaining envs
  python-apply:
    needs: build-matrix
    if: needs.build-matrix.outputs.matrix != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ${{ fromJSON(needs.build-matrix.outputs.matrix) }}
 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
 
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
 
      - name: Install dependencies
        run: |
          echo "Installing dependencies for environment: ${{ matrix.env }}"
          python -m pip install --upgrade pip
          pip install pytest
 
      - name: Run tests
        run: |
          echo "Running tests in environment: ${{ matrix.env }}"
          python -m pytest addition.py
 
      - name: Show script output
        run: |
          echo "Script output for environment: ${{ matrix.env }}"
          python addition.py
