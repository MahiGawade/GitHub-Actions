name: Python Apply
 
on:
  pull_request:
    types: [closed]
 
jobs:
  set-matrix:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.filter.outputs.matrix }}
    steps:
      - name: Debug Labels
        run: echo "Raw labels: ${{ join(github.event.pull_request.labels.*.name, ' | ') }}"
 
      - name: Collect Labels
        id: labels
        run: |
          echo "labels=${{ join(github.event.pull_request.labels.*.name, ' ') }}" >> $GITHUB_OUTPUT
 
      - name: Filter Matrix
        id: filter
        run: |
          ALL_ENVS=("dev1" "dev2")
          LABELS="${{ steps.labels.outputs.labels }}"
          echo "Labels: $LABELS"
 
          FILTERED="[]"
          for env in "${ALL_ENVS[@]}"; do
            if echo "$LABELS" | grep -q "aws_${env}/no-changes"; then
              echo "Skipping $env because of aws_${env}/no-changes label"
            else
              FILTERED=$(jq -nc --argjson arr "$FILTERED" --arg e "$env" '$arr + [$e]')
            fi
          done
 
          echo "Final matrix: $FILTERED"
          echo "matrix=$FILTERED" >> $GITHUB_OUTPUT
 
  python-apply:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
 
      - name: Dummy Apply
        run: |
          echo "Applying changes for environment: ${{ matrix.env }}"
          # Replace this with terraform apply or your real command